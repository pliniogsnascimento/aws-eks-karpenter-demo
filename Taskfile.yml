# https://taskfile.dev

version: '3'

vars:
  KARPENTER_NAMESPACE: "kube-system"
  KARPENTER_VERSION: "1.5.0"
  K8S_VERSION: "1.32"
  CLUSTER_NAME: "karpenter-demo"
  AWS_DEFAULT_REGION: "us-east-1"
  AWS_PARTITION: "aws" # if you are not using standard partitions, you may need to configure to aws-cn / aws-us-gov



tasks:
  default:
    cmds:
      - task: deployKarpenter
    silent: true
    vars:
      AWS_ACCOUNT_ID:
        sh: aws sts get-caller-identity --query Account --output text
      TEMPOUT:
        sh: mktemp
      ALIAS_VERSION:
        sh: aws ssm get-parameter --name "/aws/service/eks/optimized-ami/{{.K8S_VERSION}}/amazon-linux-2023/x86_64/standard/recommended/image_id" --query Parameter.Value | xargs aws ec2 describe-images --query 'Images[0].Name' --image-ids | sed -r 's/^.*(v[[:digit:]]+).*$/\1/'

  deployKarpenter:
    internal: true
    cmds:
      - echo "{{.CLUSTER_ENDPOINT}} {{.KARPENTER_IAM_ROLE_ARN}}"
      - helm registry logout public.ecr.aws
      - |
        helm upgrade --install karpenter oci://public.ecr.aws/karpenter/karpenter --version "{{.KARPENTER_VERSION}}" --namespace "{{.KARPENTER_NAMESPACE}}" --create-namespace
          --set "settings.clusterName={{.CLUSTER_NAME}}"
          --set "settings.interruptionQueue={{.CLUSTER_NAME}}"
          --set controller.resources.requests.cpu=1
          --set controller.resources.requests.memory=1Gi
          --set controller.resources.limits.cpu=1
          --set controller.resources.limits.memory=1Gi
          --wait
    vars:
      CLUSTER_ENDPOINT:
        sh: aws eks describe-cluster --name "{{.CLUSTER_NAME}}" --query "cluster.endpoint" --output text
      KARPENTER_IAM_ROLE_ARN:
        sh: arn:{{.AWS_PARTITION}}:iam::{{.AWS_ACCOUNT_ID}}:role/{{.CLUSTER_NAME}}-karpenter

  destroy:
    cmds:
      - aws cloudformation delete-stack --stack-name "Karpenter-{{.CLUSTER_NAME}}"
      - aws ec2 describe-launch-templates --region {{.AWS_DEFAULT_REGION}} --filters "Name=tag:karpenter.k8s.aws/cluster,Values={{.CLUSTER_NAME}}" |
          jq -r ".LaunchTemplates[].LaunchTemplateName" |
          xargs -I{} aws ec2 delete-launch-template --launch-template-name {}
      - eksctl delete cluster --name "{{.CLUSTER_NAME}} --region {{.AWS_DEFAULT_REGION}}"
